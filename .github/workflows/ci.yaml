name: cloudy build and test

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: cabal / ghc-${{matrix.ghc}} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macOS-latest
        cabal: ["latest"]
        ghc:
          - "9.4.8"
          - "9.6.6"
          - "9.8.2"
          # - "9.10.1"

    steps:
    - uses: actions/checkout@v2
      #if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        cabal update
        cabal build --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - name: Test
      run: |
        cabal test --enable-tests

  stack:
    name: stack ${{ matrix.resolver }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["latest"]
        resolver:
          - "--stack-yaml ./stack-ghc-9.4.yaml"
          - "--stack-yaml ./stack.yaml" # GHC 9.6

    steps:
    - uses: actions/checkout@v2
      #if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v2
      name: Setup Haskell Stack
      with:
        stack-version: ${{ matrix.stack }}
        enable-stack: true

    - uses: actions/cache@v3
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.resolver }}-stack

    - name: Build
      run: |
        stack build ${{ matrix.resolver }} --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack test ${{ matrix.resolver }}

  nix:
    name: nix / ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: DeterminateSystems/magic-nix-cache-action@v2

      - run: nix-build

      - run: nix-build shell.nix
